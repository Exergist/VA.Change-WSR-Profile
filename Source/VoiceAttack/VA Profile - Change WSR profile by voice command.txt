TODO:
Check Windows 10 Command Line in TaskMgr for Speech Properties window and add notes to checking inline function

//Allows user to switch Windows Speech Recognition (WSR) profiles by voice command
//The profile names contained within the bracketed dynamic command section must exactly match the corresponding WSR profile names
//Insert as many WSR profile names in the 'When I say' field as you want available for voice-activated switching (minimum of 1)

DISABLED - //Check all processes to see if the Speech Properties window is open and terminate command if true
DISABLED - //When the Speech Properties window is open any attempts by VoiceAttack to change the WSR profile will not be saved by Windows
DISABLED - Inline C# Function: Check if Speech Properties is open, wait until execution finishes
DISABLED - Begin Boolean Compare : [sPropStatus] Equals True
    DISABLED - Write '[Red] Action terminated. Speech Properties window is open.' to log
    DISABLED - Say, 'Action terminated, Speech Properties window is open.'  (and wait until it completes)
    DISABLED - Exit Command
DISABLED - End Condition

//Extract name of requested WSR profile from spoken command
Set Text [WSRActivatedProfile] to '{CMDSEGMENT:1}'

//Get WSR profile in and change WSR profile using C# inline function
Inline C# Function: Change WSR Profile, wait until execution finishes

//Output general WSR profile information to the VoiceAttack event log
Write '[Blue] Current Profile = {TXT:WSRCurrentProfile}' to log
Write '[Blue] Available Profiles = {TXT:WSRProfileList}' to log

//Output result of attempted WSR profile change
Begin Condition : [WSRChangeResult] Contains 'ERROR' OR [WSRChangeResult] Contains 'not found'
    Write '[Red] {TXT:WSRChangeResult}' to log
    Say, '{TXT:WSRChangeResult}'  (and wait until it completes)
Else If Text Compare : [{TXT:WSRChangeResult}] Contains 'already activated'
    Write '[Yellow] {TXT:WSRChangeResult}' to log
    Say, '{TXT:WSRChangeResult}'  (and wait until it completes)
Else
    Write '[Blue] {TXT:WSRChangeResult}' to log
    
    //Close and restart VoiceAttack so that WSR profile change is recognized by VoiceAttack
    //Store expected location for VA restart batch file and check if the file exists
    Set Text [VARestartBatchFile] to '{VA_APPS}{EXP:'\VA.Change-WSR-Profile\' + 'Restart VoiceAttack.bat'}'
    Begin Text Compare : [{STATE_FILEEXISTS:VARestartBatchFile}] Equals '0'
        //Create batch file for restarting VoiceAttack
        Write (overwrite), '@Echo off
TIMEOUT /T 2 >nul
START "" "{VA_DIR}{EXP:'\VoiceAttack.exe'}"' to file '{TXT:VARestartBatchFile}'
        Pause 1 second
    End Condition
    Write '[Blue] VoiceAttack will now restart...' to log
    Pause 1 second
    //Run the "VoiceAttack Restart.bat" file. It should actually delay (as part of the .bat) before resterting VoiceAttack.
    Run application '{TXT:VARestartBatchFile}' (hidden)
    //VoiceAttack action to close the VoiceAttack program
    Close 'VoiceAttack' process
End Condition
